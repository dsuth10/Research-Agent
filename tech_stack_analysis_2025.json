{
  "build_tool": {
    "recommended": "Vite",
    "version": "5.x",
    "reasoning": "CRA is deprecated as of 2025. Vite offers significantly faster development and build times, better TypeScript support, and is the React team's recommended build tool.",
    "setup": "npm create vite@latest research-wrapper -- --template react-ts"
  },
  "framework": {
    "core": "React 18/19",
    "language": "TypeScript",
    "reasoning": "React 19 brings server components and improved form handling, TypeScript is essential for maintainable code in 2025"
  },
  "state_management": {
    "server_state": {
      "library": "TanStack Query v5",
      "reasoning": "Industry standard for server state management, excellent caching, background sync"
    },
    "client_state": {
      "library": "Zustand",
      "reasoning": "Lightweight, performant, excellent TypeScript support, simpler than Redux for most use cases"
    }
  },
  "form_handling": {
    "library": "React Hook Form",
    "integration": "Zod for validation",
    "reasoning": "RHF remains superior to React 19's native forms for complex validation and performance"
  },
  "api_integration": {
    "deep_research": {
      "model": "o3-deep-research-2025-06-26",
      "pricing": "$10/1M input, $40/1M output tokens",
      "endpoint": "responses API"
    },
    "prompt_generation": {
      "model": "gpt-4.1",
      "pricing": "Lower cost than o3",
      "reasoning": "Excellent for prompt crafting and refinement"
    }
  },
  "file_system": {
    "api": "File System Access API",
    "browser_support": "Chrome/Edge 86+, Safari 15.2+ (partial), Firefox limited",
    "fallback": "browser-fs-access library for compatibility"
  },
  "export_libraries": {
    "markdown": "Native markdown strings",
    "docx": "docx.js or docxtemplater",
    "pdf": "pdf-lib (recommended over jsPDF for 2025)",
    "reasoning": "pdf-lib supports both creation and modification, better performance"
  },
  "testing": {
    "framework": "Vitest",
    "component_testing": "React Testing Library",
    "browser_mode": "Vitest Browser Mode for real browser testing",
    "reasoning": "Vitest is the modern replacement for Jest, especially for Vite projects"
  },
  "security": {
    "api_keys": "Environment variables (.env.local)",
    "storage": "No server-side storage - all local",
    "considerations": "Client-side API key exposure is inherent limitation"
  }
}